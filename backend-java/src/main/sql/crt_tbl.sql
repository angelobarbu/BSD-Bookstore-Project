-- NOTE: THE ORDER OF CREATION MATTERS IF YOU WANT TO RECREATE!!!

CREATE TABLE Author (
    AuthorID INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(255) NOT NULL,
    Biography TEXT,
    Birthdate DATE,
    Country VARCHAR(100)
);
CREATE TABLE Publisher (
   PublisherID INT AUTO_INCREMENT PRIMARY KEY,
   Name VARCHAR(255) NOT NULL,
   Address TEXT,
   ContactInfo TEXT
);
CREATE TABLE Address (
     AddressID INT AUTO_INCREMENT PRIMARY KEY,
     Street VARCHAR(255) NOT NULL,
     City VARCHAR(100) NOT NULL,
     PostalCode VARCHAR(20) NOT NULL,
     Country VARCHAR(100) NOT NULL,
     PhoneNumber VARCHAR(20),
     IsPrimary BOOLEAN DEFAULT FALSE
);
CREATE TABLE User (
  UserID INT AUTO_INCREMENT PRIMARY KEY,
  FullName VARCHAR(255) NOT NULL,
  Email VARCHAR(255) NOT NULL UNIQUE,
  PasswordHash VARCHAR(255) NOT NULL,
  ProfilePicture TEXT,
  Birthdate DATE,
  PhoneNumber VARCHAR(20),
  IsAdmin BOOLEAN DEFAULT FALSE,
  AddressID INT,
  CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (AddressID) REFERENCES Address(AddressID)
);
CREATE TABLE Session (
     SessionID INT AUTO_INCREMENT PRIMARY KEY,
     UserID INT NOT NULL,
     Token TEXT NOT NULL,
     ExpiresAt TIMESTAMP NOT NULL,
     FOREIGN KEY (UserID) REFERENCES User(UserID)
);
CREATE TABLE NewsletterSubscription (
    SubscriptionID INT AUTO_INCREMENT PRIMARY KEY,
    Email VARCHAR(255) NOT NULL,
    SubscribedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE Promotion (
   PromotionID INT AUTO_INCREMENT PRIMARY KEY,
   Title VARCHAR(255) NOT NULL,
   Description TEXT,
   StartDate DATE NOT NULL,
   EndDate DATE NOT NULL,
   DiscountPercentage DECIMAL(5,2) NOT NULL
);
-- Create the Cart table
CREATE TABLE Cart (
  CartID INT AUTO_INCREMENT PRIMARY KEY,
  UserID INT NOT NULL,
  CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (UserID) REFERENCES User(UserID)
);
CREATE TABLE Wishlist (
  WishlistID INT AUTO_INCREMENT PRIMARY KEY,
  UserID INT NOT NULL,
  CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (UserID) REFERENCES User(UserID)
);
CREATE TABLE Wishlist (
  WishlistID INT AUTO_INCREMENT PRIMARY KEY,
  UserID INT NOT NULL,
  CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (UserID) REFERENCES User(UserID)
);
CREATE TABLE Book (
  BookID INT AUTO_INCREMENT PRIMARY KEY,
  Title VARCHAR(255) NOT NULL,
  AuthorID INT NOT NULL,
  PublisherID INT NOT NULL,
  Price DECIMAL(10,2) NOT NULL,
  DiscountPercentage DECIMAL(5,2),
  YearPublished YEAR NOT NULL,
  Language VARCHAR(50),
  Format VARCHAR(50),
  ISBN VARCHAR(20) UNIQUE,
  StockQuantity INT NOT NULL,
  Description TEXT,
  CoverImageURL TEXT,
  CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (AuthorID) REFERENCES Author(AuthorID),
  FOREIGN KEY (PublisherID) REFERENCES Publisher(PublisherID)
);
CREATE TABLE CartItem (
  CartItemID INT AUTO_INCREMENT PRIMARY KEY,
  CartID INT NOT NULL,
  BookID INT NOT NULL,
  Quantity INT NOT NULL,
  FOREIGN KEY (CartID) REFERENCES Cart(CartID),
  FOREIGN KEY (BookID) REFERENCES Book(BookID)
);

CREATE TABLE WishlistItem (
  WishlistItemID INT AUTO_INCREMENT PRIMARY KEY,
  WishlistID INT NOT NULL,
  BookID INT NOT NULL,
  FOREIGN KEY (WishlistID) REFERENCES Wishlist(WishlistID),
  FOREIGN KEY (BookID) REFERENCES Book(BookID)
);
CREATE TABLE OrderItem (
   OrderItemID INT AUTO_INCREMENT PRIMARY KEY,
   OrderID INT NOT NULL,
   BookID INT NOT NULL,
   Quantity INT NOT NULL,
   Price DECIMAL(10,2) NOT NULL,
   FOREIGN KEY (OrderID) REFERENCES `Order`(OrderID),
   FOREIGN KEY (BookID) REFERENCES Book(BookID)
);
CREATE TABLE Review (
    ReviewID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT NOT NULL,
    BookID INT NOT NULL,
    Rating INT NOT NULL,
    Comment TEXT,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (UserID) REFERENCES User(UserID),
    FOREIGN KEY (BookID) REFERENCES Book(BookID)
);
